###############################################################################
#                           Authelia Configuration                            #
###############################################################################

theme: dark
jwt_secret: ""
default_redirection_url: https://a./

server:
  host: 0.0.0.0
  port: 9091
  path: ""
  buffers:
    read: 4096
    write: 4096
  enable_pprof: false
  enable_expvars: false
  disable_healthcheck: false
  tls:
    key: ""
    certificate: ""

log:
  level: info

totp:
  issuer: a.
  period: 30
  skew: 1

access_control:
  default_policy: deny
  rules:
    # bypass for sonarr and radarr api
    - domain: ["sonarr.", "s.", "radarr."]
      policy: bypass
      resources:
        - '^(\/api\/v3\/).+'
    # bypass for sabnzbd api
    - domain: "sn."
      policy: bypass
      resources:
        - '^(\/api).+'
    # bypass for tautulli api
    - domain: "tautulli."
      policy: bypass
      resources:
        - '(\/api\/v2).+'
    # catch-all
    - domain:
        - "*."
      subject:
        - "group:admins"
      policy: one_factor

session:
  name: authelia_session
  domain:
  same_site: lax
  secret: "YOUR_SESSION_SECRET"
  expiration: 1h
  inactivity: 5m
  remember_me_duration: 2M
  redis:
    host: authelia-redis
    port: 6379
    database_index: 0
    maximum_active_connections: 10
    minimum_idle_connections: 0

regulation:
  max_retries: 3
  find_time: 10m
  ban_time: 12h

storage:
  encryption_key:
  postgres:
    host: authelia-postgres
    port: 5432
    database:
    schema: public
    username:
    password:

notifier:
  disable_startup_check: false
  smtp:
    username:
    password: ""
    host:
    port:
    sender: Authelia <authelia@noreply.>
    subject: "[Authelia] {title}"
    startup_check_address: test@authelia.com
    disable_require_tls: false
    disable_html_emails: false
    tls:
      skip_verify: false
      minimum_version: TLS1.2

authentication_backend:
  # Password reset through authelia works normally.
  password_reset:
    disable: false
  # How often authelia should check if there is an user update in LDAP
  refresh_interval: 1m
  ldap:
    implementation: custom
    # Pattern is ldap://HOSTNAME-OR-IP:PORT
    # Normal ldap port is 389, standard in LLDAP is 3890
    url: ldap://lldap:3890
    # The dial timeout for LDAP.
    timeout: 5s
    # Use StartTLS with the LDAP connection, TLS not supported right now
    start_tls: false
    #tls:
    #  skip_verify: false
    #  minimum_version: TLS1.2
    # Set base dn, like dc=google,dc.com
    base_dn: dc=,dc=
    username_attribute: uid
    # You need to set this to ou=people, because all users are stored in this ou!
    additional_users_dn: ou=people
    # To allow sign in both with username and email, one can use a filter like
    # (&(|({username_attribute}={input})({mail_attribute}={input}))(objectClass=person))
    users_filter: "(&({username_attribute}={input})(objectClass=person))"
    # Set this to ou=groups, because all groups are stored in this ou
    additional_groups_dn: ou=groups
    # Only this filter is supported right now
    groups_filter: "(member={dn})"
    # The attribute holding the name of the group.
    group_name_attribute: cn
    # Email attribute
    mail_attribute: mail
    # The attribute holding the display name of the user. This will be used to greet an authenticated user.
    display_name_attribute: Authelia
    # The username and password of the admin user.
    # "admin" should be the admin username you set in the LLDAP configuration
    user: uid=admin,ou=people,dc=,dc=
    # Password can also be set using a secret: https://www.authelia.com/docs/configuration/secrets.html
    password: ""

identity_providers:
  oidc:
    hmac_secret:
    issuer_private_key: |
      -----BEGIN RSA PRIVATE KEY-----
      -----END RSA PRIVATE KEY-----
    access_token_lifespan: 1h
    authorize_code_lifespan: 1m
    id_token_lifespan: 1h
    refresh_token_lifespan: 90m
    enable_client_debug_messages: false
    enforce_pkce: public_clients_only
    cors:
      endpoints:
        - authorization
        - token
        - revocation
        - introspection
      allowed_origins:
        - "*"
      allowed_origins_from_client_redirect_uris: false
    clients:
      - id: gitlab
        description: GitLab
        secret: ""
        public: false
        authorization_policy: two_factor
        redirect_uris:
          - https://git./users/auth/openid_connect/callback
        scopes:
          - openid
          - profile
          - groups
          - email
        userinfo_signing_algorithm: none
      - id: grafana
        description: Grafana
        secret: ""
        public: false
        authorization_policy: two_factor
        redirect_uris:
          - https://grafana./login/generic_oauth
        scopes:
          - openid
          - profile
          - groups
          - email
        userinfo_signing_algorithm: none
      - id: portainer
        description: Portainer
        secret: ""
        public: false
        authorization_policy: two_factor
        redirect_uris:
          - https://portainer.
        scopes:
          - openid
          - profile
          - groups
          - email
        userinfo_signing_algorithm: none
